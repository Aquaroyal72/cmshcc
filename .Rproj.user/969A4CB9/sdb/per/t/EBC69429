{
    "contents" : "#Generates a random date\nrandomDate <- function(size = 100, start_time = \"1930/01/01\", end_time = \"2010/12/31\") {\n  start_time <- as.POSIXct(as.Date(start_time))\n  end_time <- as.POSIXct(as.Date(end_time))\n  date_time <- as.numeric(difftime(end_time, start_time, unit = \"sec\"))\n  end_value <- sort(runif(size, 0, date_time))\n  random_time <- start_time + end_value\n  return(random_time)\n}\n\n#Generates a sample dataframe of people of specified size\ngenerateTestPERSON <- function(size = 100, seed = 2, start_time = \"1930/01/01\", end_time = \"2010/12/31\") {\n  set.seed(seed)\n  HICNO <- 1:size\n  SEX <- sample(x = c(1, 2), size, replace = TRUE)\n  DOB <- randomDate(size, start_time, end_time)\n  MCAID <- sample(x = c(0, 1), size, replace = TRUE)\n  NMCAID <- sample(x = c(0, 1), size, replace = TRUE)\n  OREC <- sample(x = 0:3, size, replace = TRUE)\n  PERSON <- data.frame(HICNO = HICNO, SEX = SEX, DOB = DOB, MCAID = MCAID, NMCAID = NMCAID, OREC = OREC, stringsAsFactors = FALSE)\n  return(PERSON)\n}\n\n#Generates a sample dataframe of diagnoses of specified size\ngenerateTestDIAG <- function(size = 100, seed = 2, max_dx = 10, cmshcc_map) {\n  set.seed(seed)\n  num_dx <- sample(x = 1:max_dx, size, replace = TRUE)\n  tot_dx <- sum(num_dx)\n  dxs <- sample(cmshcc_map$icd9, tot_dx, replace = TRUE)\n  HICNO <-rep(x = 1:size, times = num_dx)\n  DIAG <- data.frame(HICNO = HICNO, DIAGS = dxs, stringsAsFactors = FALSE)\n  return(DIAG)\n}\n\n#Load icd9HCC mapping\nloadicd9HCC <- function() {\n\tcmshcc_map <- read.csv(file.choose(), header=FALSE, sep=\"\", stringsAsFactors=FALSE)\n\tnames(cmshcc_map) <- c(\"icd9\", \"hcc\")\n\t#Generate list of HCC mapping\n\thccs <- sort(unique(cmshcc_map$hcc))\n\tcmshcc_list <- list()\n\tfor(i in 1:length(hccs)) {\n\t\tlabel <- paste0(\"HCC\", hccs[i])\n\t\tcmshcc_list[[label]] <- subset(cmshcc_map, hcc == hccs[i])$icd9\n\t}\n\tcmshcc_list\n}\n\n#New Enrollee Model\nage_gender_only <- function(PERSON, date = Sys.Date(), factor_list = factors){\n  PERSON$AGE <- as.numeric(round(difftime(date, as.Date(PERSON$DOB, \"%Y-%m-%d\", tz = \"UTC\"), units = \"weeks\")/52.25))\n  PERSON$DISABL <- (PERSON$AGE < 65) & (PERSON$OREC != 0)\n  PERSON$ORIGDS <- (PERSON$AGE >= 65) & (PERSON$OREC %in% c(1,3))\n  breaks <- c(0, 35, 45, 55, 60, 65, 70, 75, 80, 85, 90, 95, 120)\n  PERSON$AGE_BAND <- cut(x = PERSON$AGE, breaks = breaks, include.lowest = TRUE, right = FALSE)\n  \n  female_age_factors <- factor_list$female_age_factors\n  male_age_factors <- factor_list$male_age_factors\n  PERSON$AGEGENDER_SCORE <- (PERSON$SEX == 1) * male_age_factors[PERSON$AGE_BAND] + (PERSON$SEX == 2) * female_age_factors[PERSON$AGE_BAND]\n  return(PERSON$AGEGENDER_SCORE)\n}",
    "created" : 1436459614113.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1345215490",
    "id" : "EBC69429",
    "lastKnownWriteTime" : 1436539014,
    "path" : "~/ValidateHealth/cmshcc/R/samplegenerator.r",
    "project_path" : "R/samplegenerator.r",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}